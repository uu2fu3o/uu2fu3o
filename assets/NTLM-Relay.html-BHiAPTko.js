import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as t,o as e}from"./app-DS0ZCcmM.js";const l={};function n(p,i){return e(),a("div",null,i[0]||(i[0]=[t(`<h1 id="ntlm-relay" tabindex="-1"><a class="header-anchor" href="#ntlm-relay"><span>NTLM-Relay</span></a></h1><p>上一章简单介绍了NTLM的身份验证方式，现在我们知道NTLM是客户端和服务端之间的认证，那么NTLM中继我们就作为中间人，客户端认为我们是服务端，服务端认为我们是客户端。</p><p>如下的中继流程</p><figure><img src="https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/pac/ntlm_relay_basic.png" alt="ntlm_relay_basic" tabindex="0" loading="lazy"><figcaption>ntlm_relay_basic</figcaption></figure><p>在服务端的眼中，攻击者与客户端无异，因此，当我们完成上述流程，服务器认为攻击者身份验证成功，然后攻击者可以代表 原客户端 在服务器上执行操作。</p><p>每种协议更详细的介绍，可以参考这篇文章<a href="https://en.hackndo.com/ntlm-relay/" target="_blank" rel="noopener noreferrer">ntlm-realy</a></p><h2 id="relay2smb" tabindex="-1"><a class="header-anchor" href="#relay2smb"><span>Relay2SMB</span></a></h2><p>能直接relay到smb服务器，是最直接最有效的方法。可以直接控制该服务器(包括但不限于在远程服务器上执行命令，上传exe到远程命令上执行，dump 服务器的用户hash等等等等)。</p><p>realy2smb主要有两种场景 ，分为工作组环境和域环境，这里重点介绍域环境下realy2smb</p><p>在开始攻击之前，先简单介绍一下smb协议(权当复习)</p><h3 id="smb" tabindex="-1"><a class="header-anchor" href="#smb"><span>SMB</span></a></h3><p>SMB（ServerMessage Block）通信协议是微软（Microsoft）和英特尔(Intel)在1987年制定的协议，主要是作为Microsoft网络的通讯协议。SMB 是在会话层（session layer）和表示层（presentation layer）以及小部分应用层（application layer）的协议。SMB使用了NetBIOS的应用程序接口 （ApplicationProgram Interface，简称API），一般端口使用为139，445。</p><blockquote><p>SMB是应用层（和表示层）协议，使用C/S架构，其工作的端口与其使用的协议有关</p></blockquote><p>当远程连接计算机访问共享资源时有两种方式：</p><ul><li>共享计算机地址\\共IP享资源路径</li><li>共享计算机名\\共享资源路径</li></ul><p><strong>域环境</strong></p><p>域环境底下域用户的账号密码Hash保存在域控的 ntds.dit里面。如下没有限制域用户登录到某台机子，那就可以将该域用户Relay到别人的机子，或者是拿到域控的请求，将域控Relay到普通的机子，比如域管运维所在的机子。(为啥不Relay到其他域控，因为域内就域控默认开启smb签名)</p><h3 id="利用" tabindex="-1"><a class="header-anchor" href="#利用"><span>利用</span></a></h3><p>以下演示在没有特殊说明情况都是从域控relay到其他机器上</p><ul><li><a href="http://xn--impacketsmbrelayx-ly50at837c.py" target="_blank" rel="noopener noreferrer">impacket下的smbrelayx.py</a></li></ul><figure><img src="https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/pac/smbrealyx.png" alt="smbrealyx" tabindex="0" loading="lazy"><figcaption>smbrealyx</figcaption></figure><ul><li>impacket 的底下的<code>ntlmrelayx.py</code></li></ul><figure><img src="https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/pac/ntlmrelayx.png" alt="ntlmrelayx" tabindex="0" loading="lazy"><figcaption>ntlmrelayx</figcaption></figure><p>当域控访问攻击机时会relay到PC上执行命令，自带的一个权限提升</p><ul><li><p><a href="http://xn--ResponderMultiRelay-yd83av867c.py" target="_blank" rel="noopener noreferrer">Responder下的MultiRelay.py</a></p><figure><img src="https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/pac/multirelay.png" alt="multirelay" tabindex="0" loading="lazy"><figcaption>multirelay</figcaption></figure></li></ul><p>接下来演示从域机器relay到域机器</p><p>经过不断地测试，发现有以下条件：</p><blockquote><p>域用户不被限制登录到目标机器</p><p>域用户对目标机器有管理员权限</p></blockquote><p>满足以上两点即可relay,说到这里想起来一篇文章的总结</p><ul><li>域普通用户 != 中继</li><li>域管 == 中继</li><li>域普通用户+域管理员组 == 中继</li></ul><p>除了域管理员组换成目标机器的管理员组，大概是相同的</p><p>攻击与域控relay无异，只需要在已控机器上访问攻击机即可</p><figure><img src="https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/pac/u2u.png" alt="u2u" tabindex="0" loading="lazy"><figcaption>u2u</figcaption></figure><p>20为win7，登录用户为hacker,hacker在win10管理员组中</p><h2 id="relay2ews" tabindex="-1"><a class="header-anchor" href="#relay2ews"><span>Relay2EWS</span></a></h2><p>使用工具：<a href="https://github.com/Arno0x/NtlmRelayToEWS" target="_blank" rel="noopener noreferrer">ntlmRelaytoEWS</a></p><p>Exchange的认证也是支持NTLM SSP的。我们可以relay的Exchange，从而收发邮件，代理等等。在使用outlook的情况下还可以通过homepage或者下发规则达到命令执行的效果。而且这种Relay还有一种好处，将Exchange开放在外网的公司并不在少数，我们可以在外网发起relay</p><p>这里先贴贴别的师傅的截图和代码</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">meta</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> http-equiv</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Content-Language&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> content</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;en-us&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">meta</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> http-equiv</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Content-Type&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> content</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;text/html; charset=windows-1252&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Outlook&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">clientEventHandlersVBS</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> language</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">vbscript</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&lt;!--</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> Sub</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> window_onload</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">     Set</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> Application</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> ViewCtl1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">OutlookApplication</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">     Set</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> cmd</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> Application</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CreateObject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Wscript.Shell&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">     cmd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;calc&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> End</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> Sub</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">--&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">object</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> classid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;clsid:0006F063-0000-0000-C000-000000000046&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ViewCtl1&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;100%&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> height</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;100%&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">object</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">html</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://daiker.gitbook.io/windows-protocol/ntlm-pian/6#2.-relay2ews" target="_blank" rel="noopener noreferrer">来源</a></p><p>等换了域控再写一下</p><h2 id="relay2ldap" tabindex="-1"><a class="header-anchor" href="#relay2ldap"><span>Relay2LDAP</span></a></h2><p>protocol上提供了三个通用性的思路，根据权限的不同来区分</p><figure><img src="https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/ntlm/123353.png" alt="123353" tabindex="0" loading="lazy"><figcaption>123353</figcaption></figure><h3 id="高权限用户" tabindex="-1"><a class="header-anchor" href="#高权限用户"><span>高权限用户</span></a></h3><p>如果NTLM发起用户在以下用户组</p><ul><li>Enterprise admins</li><li>Domain admins</li><li>Built-in Administrators</li><li>Backup operators</li><li>Account operators</li></ul><p>那么就可以将任意用户拉进该组，从而使该用户称为高权限用户，比如域管</p><h3 id="write-acl-权限" tabindex="-1"><a class="header-anchor" href="#write-acl-权限"><span>Write Acl 权限</span></a></h3><p>如果发起者对<code>DS-Replication-GetChanges(GUID: 1131f6aa-9c07-11d1-f79f-00c04fc2dcd2)</code>和<code>DS-Replication-Get-Changes-All(1131f6ad-9c07-11d1-f79f-00c04fc2dcd2)</code>有write-acl 权限，那么就可以在该acl里面添加任意用户，从而使得该用户可以具备dcsync的权限</p><p>这个案例的典型例子就是Exchange Windows Permissions组。</p><h3 id="普通用户权限" tabindex="-1"><a class="header-anchor" href="#普通用户权限"><span>普通用户权限</span></a></h3><p>对于一个普通的域用户，可能会需要用到基于资源的约束委派，但前提是这个普通域用户能够修改目标主机的属性，能够创建机器账户。</p><p>满足这两个条件就能够使用资源约束委派了。详细可以看委派攻击的地方</p><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接"><span>参考链接</span></a></h2><p><a href="https://daiker.gitbook.io/windows-protocol/ntlm-pian/6#3.-relay2ldap" target="_blank" rel="noopener noreferrer">protocol</a></p><p><a href="http://d1iv3.me/2018/12/08/LM-Hash%E3%80%81NTLM-Hash%E3%80%81Net-NTLMv1%E3%80%81Net-NTLMv2%E8%AF%A6%E8%A7%A3/" target="_blank" rel="noopener noreferrer">LM-Hash、NTLM-Hash、Net-NTLMv1、Net-NTLMv2详解</a></p><p><a href="http://davenport.sourceforge.net/ntlm.html" target="_blank" rel="noopener noreferrer">The NTLM Authentication Protocol and Security Support Provider</a></p>`,58)]))}const k=s(l,[["render",n],["__file","NTLM-Relay.html.vue"]]),o=JSON.parse('{"path":"/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/NTLM%E4%B8%93%E9%A2%98/NTLM-Relay.html","title":"NTLM-Relay","lang":"zh-CN","frontmatter":{"description":"NTLM-Relay 上一章简单介绍了NTLM的身份验证方式，现在我们知道NTLM是客户端和服务端之间的认证，那么NTLM中继我们就作为中间人，客户端认为我们是服务端，服务端认为我们是客户端。 如下的中继流程 ntlm_relay_basicntlm_relay_basic 在服务端的眼中，攻击者与客户端无异，因此，当我们完成上述流程，服务器认为攻击者...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/articles/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/NTLM%E4%B8%93%E9%A2%98/NTLM-Relay.html"}],["meta",{"property":"og:site_name","content":"uu2fu3o的知识库"}],["meta",{"property":"og:title","content":"NTLM-Relay"}],["meta",{"property":"og:description","content":"NTLM-Relay 上一章简单介绍了NTLM的身份验证方式，现在我们知道NTLM是客户端和服务端之间的认证，那么NTLM中继我们就作为中间人，客户端认为我们是服务端，服务端认为我们是客户端。 如下的中继流程 ntlm_relay_basicntlm_relay_basic 在服务端的眼中，攻击者与客户端无异，因此，当我们完成上述流程，服务器认为攻击者..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/pac/ntlm_relay_basic.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-15T18:41:02.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-15T18:41:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"NTLM-Relay\\",\\"image\\":[\\"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/pac/ntlm_relay_basic.png\\",\\"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/pac/smbrealyx.png\\",\\"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/pac/ntlmrelayx.png\\",\\"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/pac/multirelay.png\\",\\"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/pac/u2u.png\\",\\"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/ntlm/123353.png\\"],\\"dateModified\\":\\"2025-01-15T18:41:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"uu2fu3o\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"Relay2SMB","slug":"relay2smb","link":"#relay2smb","children":[{"level":3,"title":"SMB","slug":"smb","link":"#smb","children":[]},{"level":3,"title":"利用","slug":"利用","link":"#利用","children":[]}]},{"level":2,"title":"Relay2EWS","slug":"relay2ews","link":"#relay2ews","children":[]},{"level":2,"title":"Relay2LDAP","slug":"relay2ldap","link":"#relay2ldap","children":[{"level":3,"title":"高权限用户","slug":"高权限用户","link":"#高权限用户","children":[]},{"level":3,"title":"Write Acl 权限","slug":"write-acl-权限","link":"#write-acl-权限","children":[]},{"level":3,"title":"普通用户权限","slug":"普通用户权限","link":"#普通用户权限","children":[]}]},{"level":2,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}],"git":{"createdTime":1736966462000,"updatedTime":1736966462000,"contributors":[{"name":"uu2fu3o","username":"uu2fu3o","email":"1027578439@qq.com","commits":1,"url":"https://github.com/uu2fu3o"}]},"readingTime":{"minutes":4.41,"words":1323},"filePathRelative":"渗透测试/NTLM专题/NTLM-Relay.md","localizedDate":"2025年1月16日","excerpt":"\\n<p>上一章简单介绍了NTLM的身份验证方式，现在我们知道NTLM是客户端和服务端之间的认证，那么NTLM中继我们就作为中间人，客户端认为我们是服务端，服务端认为我们是客户端。</p>\\n<p>如下的中继流程</p>\\n<figure><img src=\\"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/pac/ntlm_relay_basic.png\\" alt=\\"ntlm_relay_basic\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>ntlm_relay_basic</figcaption></figure>","autoDesc":true}');export{k as comp,o as data};
